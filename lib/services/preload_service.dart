import 'package:achpp/models/user.dart';
import 'package:achpp/models/subscription.dart';
import 'package:achpp/models/product.dart';
import 'package:achpp/models/news.dart';
import 'package:achpp/models/video.dart';
import 'package:achpp/models/meeting.dart';
import 'package:achpp/models/club.dart';
import 'package:achpp/models/course.dart';
import 'package:achpp/models/profile_response.dart';
import 'package:achpp/repositories/auth_repository.dart';
import 'package:achpp/repositories/news_repository.dart';
import 'package:achpp/repositories/video_repository.dart';
import 'package:achpp/repositories/meeting_repository.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
class PreloadService {
  final AuthRepository _authRepository = AuthRepository();
  final NewsRepository _newsRepository = NewsRepository();
  final VideoRepository _videoRepository = VideoRepository();
  final MeetingRepository _meetingRepository = MeetingRepository();

  /// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  static PreloadedData? _cachedData;

  /// –ü–æ–ª—É—á–∏—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  static PreloadedData? getCachedData() => _cachedData;

  /// –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
  static void clearCache() => _cachedData = null;

  /// –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  Future<PreloadedData> preloadHomeData() async {
    print('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');

    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
      final results = await Future.wait([
        _authRepository.getProfile(),
        _authRepository.getCurrentSubscription(),
        _authRepository.getFavorites(),
        _authRepository.getNotifications(perPage: 5),
        _newsRepository.getFeaturedNews(limit: 1),
        _videoRepository.getLatestVideo(),
        _authRepository.getWatchHistory(limit: 3),
        _meetingRepository.getUpcomingMeetings(limit: 3),
      ]);

      // –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      final profileData = results[0] as ProfileData;
      final subscriptionData = results[1] as Map<String, dynamic>;
      final favoritesData = results[2] as Map<String, dynamic>;
      final notificationsData = results[3] as Map<String, dynamic>;
      final newsData = results[4] as Map<String, dynamic>;
      final videoData = results[5] as Map<String, dynamic>;
      final watchHistoryData = results[6] as Map<String, dynamic>;
      final meetingsData = results[7] as Map<String, dynamic>;

      // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      final preloadedData = PreloadedData(
        profileData: profileData,
        subscriptionData: subscriptionData,
        favoritesData: favoritesData,
        notificationsData: notificationsData,
        newsData: newsData,
        videoData: videoData,
        watchHistoryData: watchHistoryData,
        meetingsData: meetingsData,
        timestamp: DateTime.now(),
      );

      // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
      _cachedData = preloadedData;

      print('‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      return preloadedData;

    } catch (e) {
      print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏: $e');
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∏–ª–æ —Ä–∞–±–æ—Ç—É
      return PreloadedData.empty();
    }
  }
}

/// –ö–ª–∞—Å—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
class PreloadedData {
  final ProfileData? profileData;
  final Map<String, dynamic>? subscriptionData;
  final Map<String, dynamic>? favoritesData;
  final Map<String, dynamic>? notificationsData;
  final Map<String, dynamic>? newsData;
  final Map<String, dynamic>? videoData;
  final Map<String, dynamic>? watchHistoryData;
  final Map<String, dynamic>? meetingsData;
  final DateTime timestamp;

  PreloadedData({
    required this.profileData,
    required this.subscriptionData,
    required this.favoritesData,
    required this.notificationsData,
    required this.newsData,
    required this.videoData,
    required this.watchHistoryData,
    required this.meetingsData,
    required this.timestamp,
  });

  /// –°–æ–∑–¥–∞–µ—Ç –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  factory PreloadedData.empty() {
    return PreloadedData(
      profileData: null,
      subscriptionData: {'subscription': null, 'expires_at': null},
      favoritesData: {'favorites': []},
      notificationsData: {'notifications': [], 'unread_count': 0},
      newsData: {'news': []},
      videoData: {'video': null},
      watchHistoryData: {'videos': []},
      meetingsData: {'meetings': []},
      timestamp: DateTime.now(),
    );
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞—Ä–µ–ª–∏ –ª–∏ –¥–∞–Ω–Ω—ã–µ (–±–æ–ª–µ–µ 5 –º–∏–Ω—É—Ç)
  bool get isExpired {
    return DateTime.now().difference(timestamp).inMinutes > 5;
  }

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  bool get isComplete {
    return profileData != null &&
           subscriptionData != null &&
           favoritesData != null;
  }
}
